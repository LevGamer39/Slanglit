from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from utils.keyboards import get_main_keyboard, translation_mode_keyboard
from utils.states import TranslationStates, SearchStates, AdminStates
from services.translation_service import TranslationService
from services.admin_service import AdminService

router = Router()

@router.message()
async def handle_any_message(message: Message, state: FSMContext, translation_service: TranslationService, admin_service: AdminService):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Å—Ç–∏–∫–µ—Ä—ã, GIF, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ —Ç.–¥.)
    if message.content_type != 'text':
        current_state = await state.get_state()
        
        # –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–≤–æ–¥–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        if current_state in [TranslationStates.waiting_for_informal.state, 
                           TranslationStates.waiting_for_formal.state]:
            await message.answer("‚ùå –í —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", reply_markup=translation_mode_keyboard)
            return
        
        # –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –¥—Ä—É–≥–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö, –≥–¥–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç–µ–∫—Å—Ç
        text_input_states = [
            SearchStates.waiting_for_search.state,
            AdminStates.waiting_for_admin_login.state,
            AdminStates.waiting_for_admin_role.state,
            AdminStates.waiting_for_admin_remove.state,
        ]
        
        if current_state in text_input_states:
            await message.answer("‚ùå –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
            return
        
        # –ï—Å–ª–∏ –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        response_text = (
            "‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n"
            "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è:\n"
            "‚Ä¢ üîÑ –ü–µ—Ä–µ–≤–æ–¥ - –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞\n"
            "‚Ä¢ üìñ –ò—Å—Ç–æ—Ä–∏—è - –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
        if admin_service.is_user_admin(message.from_user.id):
            response_text += "‚Ä¢ ‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å - –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
        
        await message.answer(
            response_text,
            reply_markup=get_main_keyboard(message.from_user.id)
        )
        return
    
    # –î–∞–ª—å—à–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –∫–æ–º–∞–Ω–¥—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º (–∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç –¥—Ä—É–≥–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã)
    system_buttons = [
        "üîÑ –ü–µ—Ä–µ–≤–æ–¥", "üìñ –ò—Å—Ç–æ—Ä–∏—è", "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
        "üíº –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π ‚Üí –§–æ—Ä–º–∞–ª—å–Ω—ã–π", "üî• –§–æ—Ä–º–∞–ª—å–Ω—ã–π ‚Üí –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π",
        "‚ùå –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        "üë• –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤", "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞",
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
        "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", "‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å", 
        "üëë GreatAdmin", "üë§ Admin"
    ]
    
    if message.text in system_buttons or message.text.startswith('/'):
        return
    
    current_state = await state.get_state()
    
    # –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º
    if current_state:
        if len(message.text.strip()) < 1:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞")
            return
        
        try:
            if current_state == TranslationStates.waiting_for_informal.state:
                user_text = message.text
                formal_text, explanation = translation_service.translate_to_formal(user_text, message.from_user.id)
                
                response = f"üíº –§–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:\n`{formal_text}`"
                if explanation:
                    response += f"\n\nüìö –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:\n{explanation}"
                
                await message.answer(response, parse_mode='Markdown', reply_markup=translation_mode_keyboard)
                
            elif current_state == TranslationStates.waiting_for_formal.state:
                user_text = message.text
                informal_text, explanation = translation_service.translate_to_informal(user_text, message.from_user.id)
                
                response = f"üî• –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:\n`{informal_text}`"
                if explanation:
                    response += f"\n\nüìö –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:\n{explanation}"
                
                await message.answer(response, parse_mode='Markdown', reply_markup=translation_mode_keyboard)
                
            else:
                # –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º - –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã
                return
                
        except Exception as e:
            await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_any_message: {e}")
    
    else:
        # –ï—Å–ª–∏ –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏ –Ω–µ —Å–∏—Å—Ç–µ–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ —Ä–µ–∂–∏–º–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        response_text = (
            "‚ùå –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã.\n\n"
            "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è:\n"
            "‚Ä¢ üîÑ –ü–µ—Ä–µ–≤–æ–¥ - –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞\n"
            "‚Ä¢ üìñ –ò—Å—Ç–æ—Ä–∏—è - –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
        if admin_service.is_user_admin(message.from_user.id):
            response_text += "‚Ä¢ ‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å - –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
        
        await message.answer(
            response_text,
            reply_markup=get_main_keyboard(message.from_user.id)
        )